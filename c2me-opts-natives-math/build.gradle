apply plugin: 'io.github.tomtzook.gradle-cmake'

moduleDependencies(project, [
        "c2me-base",
])

java {
    sourceCompatibility = JavaVersion.VERSION_22
    targetCompatibility = JavaVersion.VERSION_22
}

def addTarget(String target, String outputName) {
    machines.customMachines.register(target) {
        toolchainFile = project.file("src/c/targets/${target}.cmake")
    }

    processResources {
        from(project.layout.buildDirectory.dir("cmake/native_lib/${target}/${outputName}")) {
            rename { "${target}-${outputName}" }
        }
    }
}

addTarget("linux-x86_64", "libc2me-opts-natives-math.so")
addTarget("linux-aarch_64", "libc2me-opts-natives-math.so")
//addTarget("darwin-x86_64", "libc2me-opts-natives-math.dylib")
//addTarget("windows-x86_64", "libc2me-opts-natives-math.dll")

cmake {
    targets {
        native_lib {
            cmakeLists = file('src/c/CMakeLists.txt')
            targetMachines.addAll(machines.customMachines)
            cmakeArgs = [ "-DCMAKE_BUILD_TYPE=RelWithDebInfo", "-DCMAKE_VERBOSE_MAKEFILE=true" ]
        }
    }
}

tasks.withType(com.github.tomtzook.gcmake.tasks.CmakeBuildTask).configureEach {
    it.inputs.dir(project.layout.projectDirectory.dir('src/c'))
}
tasks.withType(com.github.tomtzook.gcmake.tasks.MakeBuildTask).configureEach {
    it.inputs.dir(project.layout.projectDirectory.dir('src/c'))
}

clean.dependsOn tasks.cmakeClean
processResources.dependsOn tasks.cmakeBuild
